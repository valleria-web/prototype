@startuml prototipov1

class Blockchain{
    - chain: [{Block}]
    - coin : Coin
    - wallet : Wallet
    + createGenesisBlock()
    + getChain()
    + addBlock(block)
    + getLastBlock()
    + confirmTransactions(currentBlockTransactions)
}

class Miner {
    - blockchain : Blockchain
    - mempool : Mempool
    - wallet : Wallet
    + hashBlock(): String
    + proofOfWork(): Int
    + mineBlock()
}

class Mempool{
    - pendingTransactions: [{Transaction}]
    + addTransaction()
    + getPendingTransactions()
    + clearPendingTransactions()

}

class Block{
    - index: Int 
    - timeStamp: Int 
    - nonce: Int
    - hash: String 
    - previousBlockHash: String
    - Transactions:[{Transaction}]
    + createBlock()
    + addTransaction(transaction)
    + getTransactions()
}

class Transaction{
    - transactionID: String 
    - coinAmount: Int 
    - senderPublickey: String
    - receiverPublicKey: String
    - isConfirmed: boolean
}

class Wallet{
    - blockchain : Blockchain
    - name: String
    - publicKey: String
    - _balance: Int
    - Transactions:[{Transaction}]
    + getBalance()
    + sendCoin()
    + updateTransactions()
    + updateBalance()
    + generateRandomPublicKey()
    + getWallet()

}

class Coin{
    - name: String
    - ticker: String 
    - initialSupply: Int
    - maxSupply: Int
    + mintCoinbase()
    + getCoin()
}

Blockchain ..> Block : uses
Blockchain ..> Coin : uses
Miner ..> Block : uses
Miner --> Blockchain : associate
Miner --> Mempool : associate
Wallet --> Blockchain : associate
Wallet --> Mempool : associate
Wallet ..> Transaction : uses
Block ..> Transaction : uses

@enduml